[user]
  name = Paco Guzman
  email = pacoguzmanp@gmail.com
[merge]
  summary = true
  tool = opendiff
[alias]
  br = branch
  co = checkout
  ci = commit -a
  dump = cat-file -p
  edit = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; $EDITOR `f`"
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
  sls = log --oneline --stat
  sl = log --oneline --decorate -20
  sla = log --oneline --decorate --graph --all -20
  slap = log --oneline --decorate --graph --all
  put = push origin HEAD
  push-all = "!for i in $(git config --list | grep -E ^remote\\..+\\.url | sed -E 's/^remote\\.(.*)\\.url=.*/\\1/'); do git push $i master; done"
  st = status -a
  type = cat-file -t
  sp = stash pop
  sshow = "!f() { git stash show stash^{/$*} -p; }; f"
  sapply = "!f() { git stash apply stash^{/$*}; }; f"
  pfl = push --force-with-lease
  dsf = "!f() { [ \"$GIT_PREFIX\" != \"\" ] && cd "$GIT_PREFIX"; git diff --color $@ | diff-so-fancy | less --tabs=4 -RFX; }; f"
  up = pull --rebase --autostash
  patch = !git --no-pager diff --no-color
  push-and-create-mr = push origin HEAD -o merge_request.create -o merge_request.remove_source_branch
  push-and-merge-on-succeed = push origin HEAD -o merge_request.create -o merge_request.merge_when_pipeline_succeeds -o merge_request.remove_source_branch
[apply]
  whitespace = nowarn
[color]
  branch = auto
  diff = auto
  status = auto
  ui = true
[diff-highlight]
  oldNormal = "red bold"
  oldHighlight = "red bold 52"
  newNormal = "green bold"
  newHighlight = "green bold 22"
[diff]
  meta = "227"
  frag = "magenta bold"
  commit = "227 bold"
  old = "red bold"
  new = "green bold"
  whitespace = "red reverse"
[core]
  excludesfile = ~/.gitignore_global
  whitespace = fix
  quotepath = false
  autocrlf = input
  pager = diff-so-fancy | less --tabs=4 -RFX
[push]
  default = simple
[help]
  autocorrect = 1
[pager]
  color = true
[status]
  color = auto
[rerere]
  enabled = true
[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
[includeIf "gitdir:~/dev/github/cabify/"]
  path = ~/.gitconfig-cabify
[includeIf "gitdir:~/dev/github/bebanjo/"]
  path = ~/.gitconfig-bebanjo
