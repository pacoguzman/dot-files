#!/usr/bin/ruby

# activerecord logging methods very useful for digging into queries
require 'logger'
require 'activerecord' if rails?(2)

def enable_logger
  log_to(Logger.new(STDOUT))
end

def disable_logger
  log_to(nil)
end

def log_to(logger)
  ActiveRecord::Base.logger = logger
  ActiveRecord::Base.clear_active_connections!
end

def log_notifications
  ActiveSupport::Notifications.subscribe('request_event.couchrest') do |*args|
    event = ActiveSupport::Notifications::Event.new(*args)
    time  = "%.1fms" % event.duration
    method  = event.payload[:method]
    uri   = event.payload[:uri].gsub("\n", " ").squeeze(" ")
    puts "  #{ANSI[:UNDERLINE]}#{ANSI[:GREEN]}#{method} (#{time})#{ANSI[:RESET]}  #{uri}"
  end
end

# logging into console by default
enable_logger

if defined?(Rails)
  begin
    require 'hirb'
    Hirb.enable
  rescue LoadError
    warn "=> Unable to load hirb"
  end
end